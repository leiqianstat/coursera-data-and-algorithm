#include <iostream>
#include <vector>
using std::cin;
using std::cout;
using std::vector;
long long huge_fibonacci(long long n,long long m) {
    if(n<=1)
        return n%m;
    vector<long long> v;
    v.push_back(0);
    v.push_back(1);
    for (long long i = 2; i <n+1 ; ++i) {
        v.push_back((v[i - 1] + v[i - 2])%m);//在循环内取模，减少运算时间
        if(v[i-1]==0 && v[i]==1)//判断循环节终止条件，顺序出现0和1
            break;
    }
    long long k=v.size();//如果在给定的n的范围内存在的话，k-2就是循环节长度
    if(v[k-2]==0 &&v[k-1]==1%m)//判断在给定的n的范围内，k-2是否是循环节长度，有可能循环节长度大于n，从而导致没有算出
        return v[n%(k-2)];
    else
        return v[k-1];
}

int main(){
    long long n,m;
    cin>>n>>m;
    long long a=huge_fibonacci(n,m);
    cout<<a<<"\n";
    return 0;
}
